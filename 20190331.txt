Урок 5. Программирование bash
1. На скрипты:
a) Написать скрипт, который удаляет из текстового файла пустые строки и заменяет маленькие символы на большие (воспользуйтесь tr или sed).
b) Изменить скрипт мониторинга лога, чтобы он выводил сообщения при попытке неудачной аутентификации пользователя /var/log/auth.log, 
отслеживая сообщения примерно такого вида:
May 16 19:45:52 vlamp login[102782]: FAILED LOGIN (1) on '/dev/tty3' FOR 'user', Authentication failure
Проверить скрипт, выполнив ошибочную регистрацию с виртуального терминала.
c) Создать скрипт, который создаст директории для нескольких годов (2010 — 2017), в них — поддиректории для месяцев (от 01 до 12), 
и в каждый из них запишет несколько файлов с произвольными записями (например 001.txt, содержащий текст Файл 001, 002.txt с текстом 
Файл 002) и т.д.

2. * Более сложные задания на скрипты (и cron):
Создать файл crontab, который ежедневно регистрирует занятое каждым пользователем дисковое пространство в его домашней директории.
Создать скрипт ownersort.sh, который в заданной папке копирует файлы в директории, названные по имени владельца каждого файла. 
Учтите, что файл должен принадлежать соответствующему владельцу
Написать скрипт rename.sh, аналогичный разобранному, но порядковые номера файлов выравнивать, заполняя слева нуля до ширины 
максимального значения индекса: newname000.jpg, newname102.jpg (Использовать printf). Дополнительно к 3 добавить проверку 
на расширение, чтобы не переименовать .sh.
Написать скрипт резервного копирования по расписанию следующим образом: В первый день месяца помещать копию в backdir/montlhy. 
Бэкап по пятницам хранить в каталоге backdir/weekley. В остальные дни сохранять копии в backdir/daily. 
Настроить ротацию следующим образом. Ежемесячные копии хранить 180 дней, ежедневные — неделю, еженедельные — 30 дней. 
Подсказка: для ротации используйте find.
Примечание. Задание 2 дано для тех, кому упражнения 1 показалось недостаточно.

Срок сдачи до: 2 апр., 18:00 +05:00



1. a) sed -i "/^$/d" text.txt 
      cat text.txt|tr [a-z] [A-Z]>text.txt

   b) #!/bin/bash
      qaf=$(cat /var/log/auth.log|grep -a "authentication failure"|wc -l)
      if [ -z $qaf ]
      then exit
      fi
      #выводим сообщение пользователю u2 (можно заменить на имя пользователя передаваемое в командной строке $1)
      u2_pts=$(who | grep -i -m 1 u2 | awk '{print $2}')
      if [ -z $u2_pts ] 
      then
      exit
      else
      echo "authentication failure detected! See /var/log/auth.log."|write u2 $u2_pts
      fi

   c) #!/bin/bash
      mkdir -p 201{0..7}/{01..12}
      for year in {2010..2017}
      do  
      for mm in {01..12}
      do
      echo $year${mm}001 > $year/$mm/$year${mm}001.txt
      echo $year${mm}002 > $year/$mm/$year${mm}002.txt
      echo $year${mm}003 > $year/$mm/$year${mm}003.txt
      done
      done

2. a) 0 0 * * * du -sk /home/* > /var/log/daily_user_space_usage.log
  
   b) #!/bin/bash
      dir="$1"
      for name_file in $dir/*
      do
      if [[ $name_file != 'ownersort.sh' ]] ; then
      user_name=`ls -la $name_file | awk {'print $3; '}`
      mkdir -p $dir/$user_name && chown -R $user_name $dir/$user_name
      dirname=($dir/$user_name)
      cp -p $name_file $dirname
      rm -f $name_file
      fi
      done


